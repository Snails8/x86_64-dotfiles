/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/formatter.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Formatter)
/* harmony export */ });
/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("os");
/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var js_beautify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("js-beautify");
/* harmony import */ var js_beautify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(js_beautify__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var vscode_textmate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("vscode-textmate");
/* harmony import */ var vscode_textmate__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(vscode_textmate__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var detect_indent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("detect-indent");
/* harmony import */ var detect_indent__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(detect_indent__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var aigle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("aigle");
/* harmony import */ var aigle__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(aigle__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var xregexp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("xregexp");
/* harmony import */ var xregexp__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(xregexp__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _vsctm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./src/vsctm.ts");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./src/util.ts");
/* harmony import */ var _indent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./src/indent.ts");
/* eslint-disable class-methods-use-this */
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










class Formatter {
    constructor(options) {
        this.options = options;
        this.vsctm = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).vsctm || vscode_textmate__WEBPACK_IMPORTED_MODULE_3__;
        this.oniguruma = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).oniguruma;
        this.indentCharacter = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).useTabs ? '\t' : ' ';
        this.indentSize = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).indentSize || 4;
        this.wrapLineLength = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapLineLength || 120;
        this.wrapAttributes = _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapAttributes || 'auto';
        this.currentIndentLevel = 0;
        this.shouldBeIndent = false;
        this.isInsideCommentBlock = false;
        this.stack = [];
        this.rawBlocks = [];
        this.rawPhpTags = [];
        this.inlineDirectives = [];
        this.inlinePhpDirectives = [];
        this.rawPropsBlocks = [];
        this.bladeDirectives = [];
        this.bladeComments = [];
        this.bladeBraces = [];
        this.rawBladeBraces = [];
        this.scripts = [];
        this.classes = [];
        this.templatingStrings = [];
        this.result = [];
        this.diffs = [];
    }
    formatContent(content) {
        return new Promise((resolve) => resolve(content))
            .then((target) => this.preserveRawPhpTags(target))
            .then((target) => _util__WEBPACK_IMPORTED_MODULE_8__.formatAsPhp(target))
            .then((formattedAsPhp) => this.preserveBladeComment(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveBladeBrace(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveRawBladeBrace(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveInlineDirective(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveInlinePhpDirective(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveBladeDirectivesInScripts(formattedAsPhp))
            .then((formattedAsPhp) => __awaiter(this, void 0, void 0, function* () {
            this.bladeDirectives = yield this.formatPreservedBladeDirectives(this.bladeDirectives);
            return formattedAsPhp;
        }))
            .then((formattedAsPhp) => this.preserveScripts(formattedAsPhp))
            .then((formattedAsPhp) => this.preserveClass(formattedAsPhp))
            .then((formattedAsPhp) => this.formatAsHtml(formattedAsPhp))
            .then((formattedAsPhp) => this.formatAsBlade(formattedAsPhp))
            .then((formattedAsPhp) => this.restoreClass(formattedAsPhp))
            .then((formattedAsBlade) => this.restoreScripts(formattedAsBlade))
            .then((formattedAsPhp) => this.restoreBladeDirectivesInScripts(formattedAsPhp))
            .then((formattedAsBlade) => this.restoreInlinePhpDirective(formattedAsBlade))
            .then((formattedAsBlade) => this.restoreInlineDirective(formattedAsBlade))
            .then((formattedAsBlade) => this.restoreRawBladeBrace(formattedAsBlade))
            .then((formattedAsBlade) => this.restoreBladeBrace(formattedAsBlade))
            .then((formattedAsBlade) => this.restoreBladeComment(formattedAsBlade))
            .then((target) => this.restoreRawPhpTags(target))
            .then((formattedResult) => _util__WEBPACK_IMPORTED_MODULE_8__.checkResult(formattedResult));
    }
    formatAsHtml(data) {
        const options = {
            indent_size: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).indentSize || 4,
            wrap_line_length: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapLineLength || 120,
            wrap_attributes: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapAttributes || 'auto',
            end_with_newline: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).endWithNewline || true,
        };
        const promise = new Promise((resolve) => resolve(data))
            .then((content) => this.preservePhpBlock(content))
            .then((content) => _util__WEBPACK_IMPORTED_MODULE_8__.preserveDirectives(content))
            .then((preserved) => js_beautify__WEBPACK_IMPORTED_MODULE_1___default().html_beautify(preserved, options))
            .then((content) => _util__WEBPACK_IMPORTED_MODULE_8__.revertDirectives(content))
            .then((content) => this.restorePhpBlock(content));
        return Promise.resolve(promise);
    }
    preservePhpBlock(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.preserveRawPhpBlock(content).then((target) => this.preservePropsBlock(target));
        });
    }
    preservePropsBlock(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /@props\(((?:[^\\(\\)]|\([^\\(\\)]*\))*)\)/gs, (match, p1) => this.storeRawPropsBlock(p1));
        });
    }
    preserveRawPhpBlock(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /(?<!@)@php(.*?)@endphp/gs, (match, p1) => this.storeRawBlock(p1));
        });
    }
    preserveInlineDirective(content) {
        return __awaiter(this, void 0, void 0, function* () {
            const regex = new RegExp(`(?!\\/\\*.*?\\*\\/)(${_indent__WEBPACK_IMPORTED_MODULE_9__.phpKeywordStartTokens.join('|')}).*(${_indent__WEBPACK_IMPORTED_MODULE_9__.phpKeywordEndTokens.join('|')})`, 'gim');
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, regex, (match) => this.storeInlineDirective(match));
        });
    }
    preserveInlinePhpDirective(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, 
            // eslint-disable-next-line max-len
            /(?!\/\*.*?\*\/)(@php|@class|@button)(\s*?)\(((?:[^)(]+|\((?:[^)(]+|\((?:[^)(]+|\([^)(]*\))*\))*\)))*\)/gms, (match) => this.storeInlinePhpDirective(match));
        });
    }
    preserveBladeDirectivesInScripts(content) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /<script(.*?)>(.*?)<\/script>/gis, (_match, p1, p2) => {
            const targetTokens = [..._indent__WEBPACK_IMPORTED_MODULE_9__.indentStartTokens, ..._indent__WEBPACK_IMPORTED_MODULE_9__.inlineFunctionTokens];
            if (new RegExp(targetTokens.join('|'), 'gmi').test(p2) === false) {
                return `<script${p1}>${p2}</script>`;
            }
            const inlineFunctionDirectives = _indent__WEBPACK_IMPORTED_MODULE_9__.inlineFunctionTokens.join('|');
            const inlineFunctionRegex = new RegExp(
            // eslint-disable-next-line max-len
            `(?!\\/\\*.*?\\*\\/)(${inlineFunctionDirectives})(\\s*?)\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)`, 'gmi');
            // eslint-disable-next-line no-param-reassign
            p2 = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(p2, inlineFunctionRegex, (match) => this.storeBladeDirective(_util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(match)));
            const directives = lodash__WEBPACK_IMPORTED_MODULE_2___default().chain(_indent__WEBPACK_IMPORTED_MODULE_9__.indentStartTokens)
                .without('@switch', '@forelse', '@empty')
                .map((x) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(x, /@/, ''))
                .value();
            lodash__WEBPACK_IMPORTED_MODULE_2___default().forEach(directives, (directive) => {
                try {
                    const recursivelyMatched = xregexp__WEBPACK_IMPORTED_MODULE_6___default().matchRecursive(p2, `\\@${directive}`, `\\@end${directive}`, 'gmi', {
                        valueNames: [null, 'left', 'match', 'right'],
                    });
                    let output = '';
                    if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(recursivelyMatched)) {
                        return;
                    }
                    lodash__WEBPACK_IMPORTED_MODULE_2___default().forEach(recursivelyMatched, (r) => {
                        output += r.value;
                        if (r.name === 'right') {
                            if (p2.includes(output)) {
                                // eslint-disable-next-line no-param-reassign
                                p2 = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(p2, output, this.storeBladeDirective(output));
                            }
                            output = '';
                        }
                    });
                }
                catch (error) {
                    throw new Error('directive in scripts parsing error');
                }
            });
            return `<script${p1}>${p2}</script>`;
        });
    }
    preserveBladeComment(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /\{\{--(.*?)--\}\}/gs, (_match, p1) => this.storeBladeComment(p1));
        });
    }
    preserveBladeBrace(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /\{\{(.*?)\}\}/gs, (_match, p1) => this.storeBladeBrace(p1, p1.length));
        });
    }
    preserveRawBladeBrace(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /\{!!(.*?)!!\}/gs, (_match, p1) => this.storeRawBladeBrace(p1));
        });
    }
    preserveRawPhpTags(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /<\?php(.*?)\?>/gms, (match) => this.storeRawPhpTags(match));
        });
    }
    preserveScripts(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /<script.*?>.*?<\/script>/gis, (match) => this.storeScripts(match));
        });
    }
    preserveClass(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /(\s*)class="(.*?)"(\s*)/gs, (_match, p1, p2, p3) => `${p1}class="${this.storeClass(p2)}"${p3}`);
        });
    }
    storeRawBlock(value) {
        return this.getRawPlaceholder(this.rawBlocks.push(value) - 1);
    }
    storeInlineDirective(value) {
        return this.getInlinePlaceholder(this.inlineDirectives.push(value) - 1);
    }
    storeInlinePhpDirective(value) {
        return this.getInlinePhpPlaceholder(this.inlinePhpDirectives.push(value) - 1);
    }
    storeRawPropsBlock(value) {
        return this.getRawPropsPlaceholder(this.rawPropsBlocks.push(value) - 1);
    }
    storeBladeDirective(value) {
        return this.getBladeDirectivePlaceholder(this.bladeDirectives.push(value) - 1);
    }
    storeBladeComment(value) {
        return this.getBladeCommentPlaceholder(this.bladeComments.push(value) - 1);
    }
    storeBladeBrace(value, length) {
        const index = this.bladeBraces.push(value) - 1;
        const brace = '{{  }}';
        return this.getBladeBracePlaceholder(index, length + brace.length);
    }
    storeRawBladeBrace(value) {
        const index = this.rawBladeBraces.push(value) - 1;
        return this.getRawBladeBracePlaceholder(index);
    }
    storeRawPhpTags(value) {
        const index = this.rawPhpTags.push(value) - 1;
        return this.getRawPhpTagPlaceholder(index);
    }
    storeScripts(value) {
        const index = this.scripts.push(value) - 1;
        return this.getScriptPlaceholder(index);
    }
    storeClass(value) {
        const index = this.classes.push(value) - 1;
        if (value.length > 0) {
            return this.getClassPlaceholder(index, value.length);
        }
        return this.getClassPlaceholder(index, null);
    }
    storeTemplatingString(value) {
        const index = this.templatingStrings.push(value) - 1;
        return this.getTemplatingStringPlaceholder(index);
    }
    getRawPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('@__raw_block_#__@', '#', replace);
    }
    getInlinePlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___inline_directive_#___', '#', replace);
    }
    getInlinePhpPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___inline_php_directive_#___', '#', replace);
    }
    getRawPropsPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('@__raw_props_block_#__@', '#', replace);
    }
    getBladeDirectivePlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___blade_directive_#___', '#', replace);
    }
    getBladeCommentPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___blade_comment_#___', '#', replace);
    }
    getBladeBracePlaceholder(replace, length = 0) {
        if (length > 0) {
            const template = '___blade_brace_#___';
            const gap = length - template.length;
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(`___blade_brace_${lodash__WEBPACK_IMPORTED_MODULE_2___default().repeat('_', gap > 0 ? gap : 0)}#___`, '#', replace);
        }
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___blade_brace_+?#___', '#', replace);
    }
    getRawBladeBracePlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___raw_blade_brace_#___', '#', replace);
    }
    getRawPhpTagPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___raw_php_tag_#___', '#', replace);
    }
    getScriptPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___scripts_#___', '#', replace);
    }
    getClassPlaceholder(replace, length) {
        if (length && length > 0) {
            const template = '___class_#___';
            const gap = length - template.length;
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(`___class${lodash__WEBPACK_IMPORTED_MODULE_2___default().repeat('_', gap > 0 ? gap : 1)}#___`, '#', replace);
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isNull(length)) {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___class_#___', '#', replace);
        }
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___class_+?#___', '#', replace);
    }
    getTemplatingStringPlaceholder(replace) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace('___templating_str_#___', '#', replace);
    }
    restorePhpBlock(content) {
        return this.restoreRawPhpBlock(content).then((target) => this.restoreRawPropsBlock(target));
    }
    restoreRawPhpBlock(content) {
        return __awaiter(this, void 0, void 0, function* () {
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, new RegExp(`^(.*?)${this.getRawPlaceholder('(\\d+)')}`, 'gm'), (match, p1, p2) => {
                let rawBlock = this.rawBlocks[p2];
                if (this.isInline(rawBlock) && this.isMultilineStatement(rawBlock)) {
                    rawBlock = _util__WEBPACK_IMPORTED_MODULE_8__.formatStringAsPhp(`<?php\n${rawBlock}\n?>`).trim();
                }
                else if (rawBlock.split('\n').length > 1) {
                    rawBlock = _util__WEBPACK_IMPORTED_MODULE_8__.formatStringAsPhp(`<?php${rawBlock}?>`)
                        // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                        .trimRight('\n');
                }
                else {
                    rawBlock = `<?php${rawBlock}?>`;
                }
                return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(rawBlock, /^(\s*)?<\?php(.*?)\?>/gms, (_matched, _q1, q2) => {
                    if (this.isInline(rawBlock)) {
                        return `${p1}@php${q2}@endphp`;
                    }
                    return `${lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(p1) ? '' : p1}@php${this.indentRawBlock(p1, q2)}@endphp`;
                });
            });
        });
    }
    restoreRawPropsBlock(content) {
        return __awaiter(this, void 0, void 0, function* () {
            const regex = this.getRawPropsPlaceholder('(\\d+)');
            return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, new RegExp(regex, 'gms'), (_match, p1) => `@props(${_util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(this.rawPropsBlocks[p1]).trimRight()})`);
        });
    }
    isInline(content) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().split(content, '\n').length === 1;
    }
    isMultilineStatement(rawBlock) {
        return _util__WEBPACK_IMPORTED_MODULE_8__.formatStringAsPhp(`<?php${rawBlock}?>`).trimRight().split('\n').length > 1;
    }
    indentRawBlock(spaces, content) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(spaces)) {
            return content;
        }
        if (this.isInline(content)) {
            return `${spaces}${content}`;
        }
        const leftIndentAmount = detect_indent__WEBPACK_IMPORTED_MODULE_4___default()(spaces).amount;
        const indentLevel = leftIndentAmount / this.indentSize;
        const prefix = this.indentCharacter.repeat(indentLevel < 0 ? 0 : (indentLevel + 1) * this.indentSize);
        const prefixForEnd = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const lines = content.split('\n');
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().chain(lines)
            .map((line, index) => {
            if (index === 0) {
                return line.trim();
            }
            if (index === lines.length - 1) {
                return prefixForEnd + line;
            }
            return prefix + line;
        })
            .join('\n');
    }
    indentBladeDirectiveBlock(prefix, content) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(prefix)) {
            return content;
        }
        if (this.isInline(content)) {
            return `${prefix}${content}`;
        }
        const leftIndentAmount = detect_indent__WEBPACK_IMPORTED_MODULE_4___default()(prefix).amount;
        const indentLevel = leftIndentAmount / this.indentSize;
        const prefixSpaces = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const prefixForEnd = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const lines = content.split('\n');
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().chain(lines)
            .map((line, index) => {
            if (index === lines.length - 1) {
                return prefixForEnd + line;
            }
            return prefixSpaces + line;
        })
            .value()
            .join('\n');
    }
    indentScriptBlock(prefix, content) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(prefix)) {
            return content;
        }
        if (this.isInline(content)) {
            return `${prefix}${content}`;
        }
        const leftIndentAmount = detect_indent__WEBPACK_IMPORTED_MODULE_4___default()(prefix).amount;
        const indentLevel = leftIndentAmount / this.indentSize;
        const prefixSpaces = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const prefixForEnd = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const preserved = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, /`.*?`/gs, (match) => this.storeTemplatingString(match));
        const lines = preserved.split('\n');
        const indented = lodash__WEBPACK_IMPORTED_MODULE_2___default().chain(lines)
            .map((line, index) => {
            if (index === lines.length - 1) {
                return prefixForEnd + line;
            }
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(line)) {
                return line;
            }
            return prefixSpaces + line;
        })
            .value()
            .join('\n');
        return this.restoreTemplatingString(indented);
    }
    indentRawPhpBlock(prefix, content) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(prefix)) {
            return content;
        }
        if (this.isInline(content)) {
            return `${prefix}${content}`;
        }
        const leftIndentAmount = detect_indent__WEBPACK_IMPORTED_MODULE_4___default()(prefix).amount;
        const indentLevel = leftIndentAmount / this.indentSize;
        const prefixSpaces = this.indentCharacter.repeat(indentLevel < 0 ? 0 : indentLevel * this.indentSize);
        const lines = content.split('\n');
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().chain(lines)
            .map((line, index) => {
            if (index === 0) {
                return line.trim();
            }
            return prefixSpaces + line;
        })
            .value()
            .join('\n');
    }
    restoreBladeDirectivesInScripts(content) {
        const regex = new RegExp(`^(.*?)${this.getBladeDirectivePlaceholder('(\\d+)')}`, 'gm');
        let result = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, regex, (_match, p1, p2) => this.indentBladeDirectiveBlock(p1, this.bladeDirectives[p2]));
        if (regex.test(content)) {
            result = this.restoreBladeDirectivesInScripts(result);
        }
        return result;
    }
    formatPreservedBladeDirectives(directives) {
        return __awaiter(this, void 0, void 0, function* () {
            return aigle__WEBPACK_IMPORTED_MODULE_5___default().map(directives, (content) => __awaiter(this, void 0, void 0, function* () {
                const formattedAsHtml = yield this.formatAsHtml(content);
                const formatted = yield this.formatAsBlade(formattedAsHtml);
                return formatted.trimRight('\n');
            }));
        });
    }
    restoreBladeComment(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(res, new RegExp(`${this.getBladeCommentPlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => `{{-- ${this.bladeComments[p1].trim()} --}}`));
    }
    restoreBladeBrace(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(res, new RegExp(`(.*?)${this.getBladeBracePlaceholder('(\\d+)')}`, 'gm'), (_match, p1, p2) => {
            const bladeBrace = this.bladeBraces[p2];
            if (bladeBrace.trim() === '') {
                return `${p1}{{${bladeBrace}}}`;
            }
            if (this.isInline(bladeBrace)) {
                return `${p1}{{ ${_util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(bladeBrace)
                    .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                    .trim()
                    // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                    .trimRight('\n')} }}`;
            }
            return `${p1}{{ ${this.indentRawPhpBlock(p1, _util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(bladeBrace)
                .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                .trim()
                // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                .trimRight('\n'))} }}`;
        }));
    }
    restoreRawBladeBrace(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(
        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message
        res, new RegExp(`${this.getRawBladeBracePlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => {
            const bladeBrace = this.rawBladeBraces[p1];
            if (bladeBrace.trim() === '') {
                return `{!!${bladeBrace}!!}`;
            }
            return `{!! ${_util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(bladeBrace)
                .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                .trim()
                // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                .trimRight('\n')} !!}`;
        }));
    }
    restoreInlineDirective(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(
        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message
        res, new RegExp(`${this.getInlinePlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => {
            const matched = this.inlineDirectives[p1];
            return matched;
        }));
    }
    restoreInlinePhpDirective(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(
        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message
        res, new RegExp(`(.*?)${this.getInlinePhpPlaceholder('(\\d+)')}`, 'gm'), (_match, p1, p2) => {
            const matched = this.inlinePhpDirectives[p2];
            if (matched.includes('@php')) {
                return `${p1}${_util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(matched)
                    .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                    .trim()
                    // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                    .trimRight('\n')}`;
            }
            if (matched.includes('@button')) {
                const formatted = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(matched, /@(button)(.*)/gis, (match2, p3, p4) => {
                    const inside = _util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(`func_inline_for_${p3}${p4}`, 80, true)
                        .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                        .trim()
                        // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                        .trimRight('\n');
                    if (this.isInline(inside)) {
                        return `${this.indentRawPhpBlock(p1, `@${inside}`.replace('func_inline_for_', ''))}`;
                    }
                    return `${p1}${this.indentRawPhpBlock(p1, `@${inside}`.replace('func_inline_for_', ''))}`;
                });
                return formatted;
            }
            if (matched.includes('@class')) {
                const formatted = lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(matched, /@(class)(.*)/gis, (match2, p4, p5) => {
                    const inside = _util__WEBPACK_IMPORTED_MODULE_8__.formatRawStringAsPhp(`func_inline_for_${p4}${p5}`, 80, true)
                        .replace(/([\n\s]*)->([\n\s]*)/gs, '->')
                        .trim()
                        // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                        .trimRight('\n');
                    if (this.isInline(inside)) {
                        return `${this.indentRawPhpBlock(p1, `@${inside}`.replace('func_inline_for_', ''))}`;
                    }
                    return `${p1}${this.indentRawPhpBlock(p1, `@${inside}`.replace('func_inline_for_', ''))}`;
                });
                return formatted;
            }
            return `${p1}${matched}`;
        }));
    }
    restoreRawPhpTags(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(
        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message
        res, new RegExp(`${this.getRawPhpTagPlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => {
            // const result= this.rawPhpTags[p1];
            try {
                const result = _util__WEBPACK_IMPORTED_MODULE_8__.formatStringAsPhp(this.rawPhpTags[p1])
                    .trim()
                    // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
                    .trimRight('\n');
                if (this.isInline(result)) {
                    return result;
                }
                // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.
                const whiteSpaceAhead = res.match(new RegExp(`^(\\s*?)[^\\s]*?${this.getRawPhpTagPlaceholder(p1)}`, 'ms'));
                if (whiteSpaceAhead) {
                    return this.indentRawPhpBlock(whiteSpaceAhead[1], result);
                }
                return result;
            }
            catch (e) {
                return `${this.rawPhpTags[p1]}`;
            }
        }));
    }
    restoreScripts(content) {
        return new Promise((resolve) => resolve(content)).then((res) => lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(
        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message
        res, new RegExp(`^(.*?)${this.getScriptPlaceholder('(\\d+)')}`, 'gim'), (_match, p1, p2) => {
            const script = this.scripts[p2];
            const options = {
                indent_size: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).indentSize || 4,
                wrap_line_length: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapLineLength || 120,
                wrap_attributes: _util__WEBPACK_IMPORTED_MODULE_8__.optional(this.options).wrapAttributes || 'auto',
                wrap_attributes_indent_size: p1.length,
                end_with_newline: false,
                templating: ['php'],
            };
            return this.indentScriptBlock(p1, js_beautify__WEBPACK_IMPORTED_MODULE_1___default().html_beautify(script, options));
        }));
    }
    restoreClass(content) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, 
        // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.
        new RegExp(`${this.getClassPlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => this.classes[p1]);
    }
    restoreTemplatingString(content) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default().replace(content, new RegExp(`${this.getTemplatingStringPlaceholder('(\\d+)')}`, 'gms'), (_match, p1) => this.templatingStrings[p1]);
    }
    formatAsBlade(content) {
        return __awaiter(this, void 0, void 0, function* () {
            const splitedLines = _util__WEBPACK_IMPORTED_MODULE_8__.splitByLines(content);
            const vsctmModule = yield new _vsctm__WEBPACK_IMPORTED_MODULE_7__.VscodeTextmate(this.vsctm, this.oniguruma);
            // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.
            const registry = vsctmModule.createRegistry(content);
            const formatted = registry
                .loadGrammar('text.html.php.blade')
                .then((grammar) => vsctmModule.tokenizeLines(splitedLines, grammar))
                .then((tokenizedLines) => this.formatTokenizedLines(splitedLines, tokenizedLines))
                .catch((err) => {
                throw err;
            });
            return formatted;
        });
    }
    formatTokenizedLines(splitedLines, tokenizedLines) {
        this.result = [];
        this.stack = [];
        for (let i = 0; i < splitedLines.length; i += 1) {
            const originalLine = splitedLines[i];
            const tokenizeLineResult = tokenizedLines[i];
            this.processLine(tokenizeLineResult, originalLine);
        }
        return this.result.join((os__WEBPACK_IMPORTED_MODULE_0___default().EOL));
    }
    processLine(tokenizeLineResult, originalLine) {
        this.processTokenizeResult(tokenizeLineResult, originalLine);
    }
    processKeyword(token) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.phpKeywordStartTokens, token)) {
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().last(this.stack) === '@case' && token === '@case') {
                this.currentIndentLevel -= 1;
                return;
            }
            this.stack.push(token);
            return;
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.phpKeywordEndTokens, token)) {
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().last(this.stack) !== '@hassection') {
                this.stack.pop();
                return;
            }
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.indentStartAndEndTokens, token)) {
            this.shouldBeIndent = true;
            this.stack.push(token);
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.indentStartOrElseTokens, token)) {
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.tokenForIndentStartOrElseTokens, lodash__WEBPACK_IMPORTED_MODULE_2___default().last(this.stack))) {
                this.currentIndentLevel -= 1;
                this.shouldBeIndent = true;
            }
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.indentStartTokens, token)) {
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().last(this.stack) === '@section' && token === '@section') {
                if (this.currentIndentLevel > 0)
                    this.currentIndentLevel -= 1;
                this.shouldBeIndent = true;
            }
            else {
                this.shouldBeIndent = true;
                this.stack.push(token);
            }
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.indentEndTokens, token)) {
            if (lodash__WEBPACK_IMPORTED_MODULE_2___default().last(this.stack) === '@default') {
                this.currentIndentLevel -= 1;
            }
            this.currentIndentLevel -= 1;
            this.shouldBeIndent = false;
            this.stack.pop();
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(_indent__WEBPACK_IMPORTED_MODULE_9__.indentElseTokens, token)) {
            this.currentIndentLevel -= 1;
            this.shouldBeIndent = true;
        }
    }
    processToken(tokenStruct, token) {
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(tokenStruct.scopes, 'punctuation.definition.comment.begin.blade')) {
            this.isInsideCommentBlock = true;
        }
        if (this.argumentCheck) {
            const { count, inString, stack } = this.argumentCheck;
            if (!inString && token === ')') {
                stack.push(token);
                count[token] += 1;
                if (count['('] === count[token]) {
                    // finished
                    const expression = stack.join('');
                    const argumentCount = _util__WEBPACK_IMPORTED_MODULE_8__.getArgumentsCount(expression);
                    if (argumentCount >= this.argumentCheck.unindentOn)
                        this.shouldBeIndent = false;
                    this.argumentCheck = false;
                }
                return;
            }
            stack.push(token);
            if (inString === token)
                this.argumentCheck.inString = false;
            else if (!inString && (token === '"' || token === "'"))
                this.argumentCheck.inString = token;
            if (token === '(' && !inString)
                count[token] += 1;
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(tokenStruct.scopes, 'punctuation.definition.comment.end.blade')) {
            this.isInsideCommentBlock = false;
        }
        if (token === '{{--' || token.includes('{{--')) {
            this.isInsideCommentBlock = true;
        }
        if (token === '--}}' || token.includes('--}}')) {
            this.isInsideCommentBlock = false;
        }
        if (!lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(tokenStruct.scopes, 'keyword.blade')) {
            return;
        }
        if (this.isInsideCommentBlock) {
            return;
        }
        this.processKeyword(token.toLowerCase());
        if (lodash__WEBPACK_IMPORTED_MODULE_2___default().includes(Object.keys(_indent__WEBPACK_IMPORTED_MODULE_9__.optionalStartWithoutEndTokens), token.toLowerCase())) {
            this.argumentCheck = {
                // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message
                unindentOn: _indent__WEBPACK_IMPORTED_MODULE_9__.optionalStartWithoutEndTokens[token.toLowerCase()],
                stack: [],
                inString: false,
                count: { '(': 0, ')': 0 },
            };
        }
    }
    processTokenizeResult(tokenizeLineResult, originalLine) {
        if (this.shouldBeIndent) {
            this.currentIndentLevel += 1;
            this.shouldBeIndent = false;
        }
        if ((0,_indent__WEBPACK_IMPORTED_MODULE_9__.hasStartAndEndToken)(tokenizeLineResult, originalLine)) {
            this.insertFormattedLineToResult(originalLine);
            return;
        }
        for (let j = 0; j < tokenizeLineResult.tokens.length; j += 1) {
            const tokenStruct = tokenizeLineResult.tokens[j];
            const token = originalLine.substring(tokenStruct.startIndex, tokenStruct.endIndex).trim();
            this.processToken(tokenStruct, token);
        }
        this.insertFormattedLineToResult(originalLine);
    }
    insertFormattedLineToResult(originalLine) {
        const originalLineWhitespaces = detect_indent__WEBPACK_IMPORTED_MODULE_4___default()(originalLine).amount;
        const whitespaces = originalLineWhitespaces + this.indentSize * this.currentIndentLevel;
        const formattedLine = this.indentCharacter.repeat(whitespaces < 0 ? 0 : whitespaces) + originalLine.trimLeft();
        // blankline
        if (originalLine.length === 0) {
            this.result.push(originalLine);
        }
        // formatted line
        if (originalLine.length !== 0 && formattedLine.length > 0) {
            this.result.push(formattedLine);
        }
        if (formattedLine !== originalLine) {
            this.diffs.push({
                original: originalLine,
                formatted: formattedLine,
            });
        }
    }
}


/***/ }),

/***/ "./src/indent.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "indentStartTokens": () => (/* binding */ indentStartTokens),
/* harmony export */   "indentEndTokens": () => (/* binding */ indentEndTokens),
/* harmony export */   "indentElseTokens": () => (/* binding */ indentElseTokens),
/* harmony export */   "optionalStartWithoutEndTokens": () => (/* binding */ optionalStartWithoutEndTokens),
/* harmony export */   "tokenForIndentStartOrElseTokens": () => (/* binding */ tokenForIndentStartOrElseTokens),
/* harmony export */   "indentStartOrElseTokens": () => (/* binding */ indentStartOrElseTokens),
/* harmony export */   "indentStartAndEndTokens": () => (/* binding */ indentStartAndEndTokens),
/* harmony export */   "phpKeywordStartTokens": () => (/* binding */ phpKeywordStartTokens),
/* harmony export */   "phpKeywordEndTokens": () => (/* binding */ phpKeywordEndTokens),
/* harmony export */   "inlineFunctionTokens": () => (/* binding */ inlineFunctionTokens),
/* harmony export */   "hasStartAndEndToken": () => (/* binding */ hasStartAndEndToken)
/* harmony export */ });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

const indentStartTokens = [
    '@alert',
    '@auth',
    '@canany',
    '@cannot',
    '@can',
    '@role',
    '@hasrole',
    '@hasanyrole',
    '@hasallroles',
    '@unlessrole',
    '@hasexactroles',
    '@component',
    '@empty',
    '@env',
    '@foreach',
    '@for',
    '@forelse',
    '@guest',
    '@hassection',
    '@if',
    '@isset',
    '@permission',
    '@permissions',
    '@php',
    '@push',
    '@section',
    '@slot',
    '@switch',
    '@unless',
    '@verbatim',
    '@while',
    '@production',
    '@prepend',
    '@once',
    '@error',
];
const indentEndTokens = [
    '@endalert',
    '@endauth',
    '@endcanany',
    '@endcannot',
    '@endcan',
    '@endrole',
    '@endhasrole',
    '@endhasanyrole',
    '@endhasallroles',
    '@endunlessrole',
    '@endhasexactroles',
    '@endcomponent',
    '@endempty',
    '@endenv',
    '@endfor',
    '@endforeach',
    '@endforelse',
    '@endguest',
    '@endif',
    '@endisset',
    '@endphp',
    '@endpush',
    '@endsection',
    '@endslot',
    '@endswitch',
    '@endunless',
    '@endverbatim',
    '@endwhile',
    '@show',
    '@stop',
    '@endproduction',
    '@endprepend',
    '@endonce',
    '@enderror',
    '@append',
    '@overwrite',
];
const indentElseTokens = ['@elseenv', '@elseif', '@elsecanany', '@elsecannot', '@elsecan', '@else'];
// Directives which do not need an end token if a parameter is present
const optionalStartWithoutEndTokens = {
    '@section': 2,
    '@push': 2,
    '@prepend': 2,
};
const tokenForIndentStartOrElseTokens = ['@forelse'];
const indentStartOrElseTokens = ['@empty'];
const indentStartAndEndTokens = ['@default'];
const phpKeywordStartTokens = ['@forelse', '@if', '@for', '@foreach', '@while', '@sectionmissing', '@case'];
const phpKeywordEndTokens = ['@endforelse', '@endif', '@endfor', '@endforeach', '@endwhile', '@break'];
const inlineFunctionTokens = ['@json'];
function hasStartAndEndToken(tokenizeLineResult, originalLine) {
    return (lodash__WEBPACK_IMPORTED_MODULE_0___default().filter(tokenizeLineResult.tokens, (tokenStruct) => {
        const token = originalLine.substring(tokenStruct.startIndex, tokenStruct.endIndex).trim();
        return lodash__WEBPACK_IMPORTED_MODULE_0___default().includes(indentStartTokens, token) || lodash__WEBPACK_IMPORTED_MODULE_0___default().includes(indentEndTokens, token);
    }).length >= 2);
}


/***/ }),

/***/ "./src/util.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "optional": () => (/* binding */ optional),
/* harmony export */   "readFile": () => (/* binding */ readFile),
/* harmony export */   "splitByLines": () => (/* binding */ splitByLines),
/* harmony export */   "formatStringAsPhp": () => (/* binding */ formatStringAsPhp),
/* harmony export */   "formatRawStringAsPhp": () => (/* binding */ formatRawStringAsPhp),
/* harmony export */   "getArgumentsCount": () => (/* binding */ getArgumentsCount),
/* harmony export */   "normalizeIndentLevel": () => (/* binding */ normalizeIndentLevel),
/* harmony export */   "printDiffs": () => (/* binding */ printDiffs),
/* harmony export */   "generateDiff": () => (/* binding */ generateDiff),
/* harmony export */   "prettifyPhpContentWithUnescapedTags": () => (/* binding */ prettifyPhpContentWithUnescapedTags),
/* harmony export */   "prettifyPhpContentWithEscapedTags": () => (/* binding */ prettifyPhpContentWithEscapedTags),
/* harmony export */   "removeSemicolon": () => (/* binding */ removeSemicolon),
/* harmony export */   "formatAsPhp": () => (/* binding */ formatAsPhp),
/* harmony export */   "preserveOriginalPhpTagInHtml": () => (/* binding */ preserveOriginalPhpTagInHtml),
/* harmony export */   "revertOriginalPhpTagInHtml": () => (/* binding */ revertOriginalPhpTagInHtml),
/* harmony export */   "indent": () => (/* binding */ indent),
/* harmony export */   "unindent": () => (/* binding */ unindent),
/* harmony export */   "preserveDirectives": () => (/* binding */ preserveDirectives),
/* harmony export */   "preserveDirectivesInTag": () => (/* binding */ preserveDirectivesInTag),
/* harmony export */   "revertDirectives": () => (/* binding */ revertDirectives),
/* harmony export */   "revertDirectivesInTag": () => (/* binding */ revertDirectivesInTag),
/* harmony export */   "printDescription": () => (/* binding */ printDescription),
/* harmony export */   "checkResult": () => (/* binding */ checkResult),
/* harmony export */   "debugLog": () => (/* binding */ debugLog)
/* harmony export */ });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("chalk");
/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(chalk__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prettier_standalone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("prettier/standalone");
/* harmony import */ var prettier_standalone__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prettier_standalone__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("@prettier/plugin-php/standalone");
/* harmony import */ var _prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var detect_indent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("detect-indent");
/* harmony import */ var detect_indent__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(detect_indent__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _indent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/indent.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable max-len */




// @ts-ignore



const optional = (obj) => {
    const chain = {
        get() {
            return null;
        },
    };
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isUndefined(obj) || lodash__WEBPACK_IMPORTED_MODULE_0___default().isNull(obj)) {
        return chain;
    }
    return obj;
};
function readFile(path) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            fs__WEBPACK_IMPORTED_MODULE_1___default().readFile(path, (error, data) => (error ? reject(error) : resolve(data)));
        });
    });
}
function splitByLines(content) {
    if (!content) {
        return '';
    }
    return content.split(/\r\n|\n|\r/);
}
function formatStringAsPhp(content) {
    return prettier_standalone__WEBPACK_IMPORTED_MODULE_3___default().format(content.replace(/\n$/, ''), {
        parser: 'php',
        printWidth: 1000,
        singleQuote: true,
        // @ts-ignore
        phpVersion: '8.0',
        plugins: [(_prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4___default())],
    });
}
function formatRawStringAsPhp(content, printWidth = 1000, trailingCommaPHP = true) {
    return prettier_standalone__WEBPACK_IMPORTED_MODULE_3___default().format(`<?php echo ${content} ?>`, {
        parser: 'php',
        printWidth,
        singleQuote: true,
        // @ts-ignore
        phpVersion: '8.0',
        trailingCommaPHP,
        plugins: [(_prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4___default())],
    })
        .replace(/<\?php echo (.*)?\?>/gs, (match, p1) => p1.trim().replace(/;\s*$/, ''));
}
function getArgumentsCount(expression) {
    const code = `<?php tmp_func${expression}; ?>`;
    // @ts-ignore
    // eslint-disable-next-line no-underscore-dangle
    const { ast } = prettier_standalone__WEBPACK_IMPORTED_MODULE_3___default().__debug.parse(code, {
        parser: 'php',
        phpVersion: '8.0',
        plugins: [(_prettier_plugin_php_standalone__WEBPACK_IMPORTED_MODULE_4___default())],
    });
    try {
        return ast.children[0].expression.arguments.length || 0;
    }
    catch (e) {
        return 0;
    }
}
function normalizeIndentLevel(length) {
    if (length < 0) {
        return 0;
    }
    return length;
}
function printDiffs(diffs) {
    return Promise.all(lodash__WEBPACK_IMPORTED_MODULE_0___default().map(diffs, (diff) => __awaiter(this, void 0, void 0, function* () {
        process.stdout.write(`path: ${chalk__WEBPACK_IMPORTED_MODULE_2___default().bold(diff.path)}:${diff.line}\n`);
        process.stdout.write(chalk__WEBPACK_IMPORTED_MODULE_2___default().red(`--${diff.original}\n`));
        process.stdout.write(chalk__WEBPACK_IMPORTED_MODULE_2___default().green(`++${diff.formatted}\n`));
    })));
}
function generateDiff(path, originalLines, formattedLines) {
    const diff = lodash__WEBPACK_IMPORTED_MODULE_0___default().map(originalLines, (originalLine, index) => {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isEmpty(originalLine)) {
            return null;
        }
        if (originalLine === formattedLines[index]) {
            return null;
        }
        return {
            path,
            line: index + 1,
            original: originalLine,
            formatted: formattedLines[index],
        };
    });
    return lodash__WEBPACK_IMPORTED_MODULE_0___default().without(diff, null);
}
function prettifyPhpContentWithUnescapedTags(content) {
    return __awaiter(this, void 0, void 0, function* () {
        const directives = lodash__WEBPACK_IMPORTED_MODULE_0___default().without(_indent__WEBPACK_IMPORTED_MODULE_6__.indentStartTokens, '@switch', '@forelse', '@php').join('|');
        const directiveRegexes = new RegExp(
        // eslint-disable-next-line max-len
        `(?!\\/\\*.*?\\*\\/)(${directives})(\\s*?)\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)`, 'gmi');
        return new Promise((resolve) => resolve(content))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, directiveRegexes, (match, p1, p2, p3) => formatStringAsPhp(`<?php ${p1.substr('1')}${p2}(${p3}) ?>`)
            .replace(/<\?php\s(.*?)(\s*?)\((.*?)\);*\s\?>\n/gs, (match2, j1, j2, j3) => `@${j1.trim()}${j2}(${j3.trim()})`)
            .replace(/([\n\s]*)->([\n\s]*)/gs, '->')))
            .then((res) => formatStringAsPhp(res));
    });
}
function prettifyPhpContentWithEscapedTags(content) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve) => resolve(content))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /{!!/g, '<?php /*escaped*/'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /!!}/g, '/*escaped*/ ?>\n'))
            .then((res) => formatStringAsPhp(res))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /<\?php\s\/\*escaped\*\//g, '{!! '))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\/\*escaped\*\/\s\?>\n/g, ' !!}'));
    });
}
function removeSemicolon(content) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve) => {
            resolve(content);
        })
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /;[\n\s]*!!\}/g, ' !!}'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /;[\s\n]*!!}/g, ' !!}'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /;[\n\s]*}}/g, ' }}'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /; }}/g, ' }}'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /; --}}/g, ' --}}'));
    });
}
function formatAsPhp(content) {
    return __awaiter(this, void 0, void 0, function* () {
        return prettifyPhpContentWithUnescapedTags(content);
    });
}
function preserveOriginalPhpTagInHtml(content) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve) => resolve(content))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /<\?php/g, '/** phptag_start **/'))
            .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\?>/g, '/** end_phptag **/'));
    });
}
function revertOriginalPhpTagInHtml(content) {
    return new Promise((resolve) => resolve(content))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\/\*\*[\s\n]*?phptag_start[\s\n]*?\*\*\//gs, '<?php'))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\/\*\*[\s\n]*?end_phptag[\s\n]*?\*\*\/[\s];\n/g, '?>;'))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\/\*\*[\s\n]*?end_phptag[\s\n]*?\*\*\//g, '?>'));
}
function indent(content, level, options) {
    const lines = content.split('\n');
    return lodash__WEBPACK_IMPORTED_MODULE_0___default().map(lines, (line, index) => {
        if (!line.match(/\w/)) {
            return line;
        }
        const ignoreFirstLine = optional(options).ignoreFirstLine || false;
        if (ignoreFirstLine && index === 0) {
            return line;
        }
        const originalLineWhitespaces = detect_indent__WEBPACK_IMPORTED_MODULE_5___default()(line).amount;
        const indentChar = optional(options).useTabs ? '\t' : ' ';
        const indentSize = optional(options).indentSize || 4;
        const whitespaces = originalLineWhitespaces + indentSize * level;
        if (whitespaces < 0) {
            return line;
        }
        return indentChar.repeat(whitespaces) + line.trimLeft();
    }).join('\n');
}
function unindent(directive, content, level, options) {
    const lines = content.split('\n');
    return lodash__WEBPACK_IMPORTED_MODULE_0___default().map(lines, (line) => {
        if (!line.match(/\w/)) {
            return line;
        }
        const originalLineWhitespaces = detect_indent__WEBPACK_IMPORTED_MODULE_5___default()(line).amount;
        const indentChar = optional(options).useTabs ? '\t' : ' ';
        const indentSize = optional(options).indentSize || 4;
        const whitespaces = originalLineWhitespaces - indentSize * level;
        if (whitespaces < 0) {
            return line;
        }
        return indentChar.repeat(whitespaces) + line.trimLeft();
    }).join('\n');
}
function preserveDirectives(content) {
    return new Promise((resolve) => resolve(content))
        .then((res) => {
        const regex = new RegExp(`(${_indent__WEBPACK_IMPORTED_MODULE_6__.phpKeywordStartTokens.join('|')})([\\s]*?)\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)`, 'gis');
        return lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, regex, (match, p1, p2, p3) => `<beautifyTag start="${p1}${p2}" exp="^^^${lodash__WEBPACK_IMPORTED_MODULE_0___default().escape(p3)}^^^">`);
    })
        .then((res) => {
        const regex = new RegExp(`(?!end=".*)(${_indent__WEBPACK_IMPORTED_MODULE_6__.phpKeywordEndTokens.join('|')})(?!.*")`, 'gi');
        return lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, regex, (match, p1) => `</beautifyTag end="${p1}">`);
    });
}
function preserveDirectivesInTag(content) {
    return new Promise((resolve) => {
        const regex = new RegExp(`(<[^>]*?)(${_indent__WEBPACK_IMPORTED_MODULE_6__.phpKeywordStartTokens.join('|')})([\\s]*?)\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)(.*?)(${_indent__WEBPACK_IMPORTED_MODULE_6__.phpKeywordEndTokens.join('|')})([^>]*?>)`, 'gis');
        resolve(lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(content, regex, (match, p1, p2, p3, p4, p5, p6, p7) => `${p1}|-- start="${p2}${p3}" exp="^^^${p4}^^^" body="^^^${lodash__WEBPACK_IMPORTED_MODULE_0___default().escape(lodash__WEBPACK_IMPORTED_MODULE_0___default().trim(p5))}^^^" end="${p6}" --|${p7}`));
    });
}
function revertDirectives(content) {
    return new Promise((resolve) => resolve(content))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /<beautifyTag.*?start="(.*?)".*?exp=".*?\^\^\^(.*?)\^\^\^.*?"\s*>/gs, (match, p1, p2) => `${p1}(${lodash__WEBPACK_IMPORTED_MODULE_0___default().unescape(p2)})`))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /<\/beautifyTag.*?end="(.*?)"\s*>/gs, (match, p1) => `${p1}`));
}
function revertDirectivesInTag(content) {
    return new Promise((resolve) => resolve(content))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\|--.*?start="(.*?)".*?exp=".*?\^\^\^(.*?)\^\^\^.*?"(.*?)body=".*?\^\^\^(.*?)\^\^\^.*?".*?end="(.*?)".*?--\|/gs, (match, p1, p2, p3, p4, p5) => `${lodash__WEBPACK_IMPORTED_MODULE_0___default().trimStart(p1)}(${p2}) ${lodash__WEBPACK_IMPORTED_MODULE_0___default().unescape(p4)} ${p5}`))
        .then((res) => lodash__WEBPACK_IMPORTED_MODULE_0___default().replace(res, /\/-- end="(.*?)"--\//gs, (match, p1) => `${p1}`));
}
function printDescription() {
    const returnLine = '\n\n';
    process.stdout.write(returnLine);
    process.stdout.write(chalk__WEBPACK_IMPORTED_MODULE_2___default().bold.green('Fixed: F\n'));
    process.stdout.write(chalk__WEBPACK_IMPORTED_MODULE_2___default().bold.red('Errors: E\n'));
    process.stdout.write(chalk__WEBPACK_IMPORTED_MODULE_2___default().bold('Not Changed: ') + chalk__WEBPACK_IMPORTED_MODULE_2___default().bold.green('.\n'));
}
const escapeTags = [
    '/\\*\\* phptag_start \\*\\*/',
    '/\\*\\* end_phptag \\*\\*/',
    '/\\*escaped\\*/',
    '__BLADE__;',
    '/\\* blade_comment_start \\*/',
    '/\\* blade_comment_end \\*/',
    'beautifyTag',
];
function checkResult(formatted) {
    if (new RegExp(escapeTags.join('|')).test(formatted)) {
        throw new Error([
            "Can't format blade: something goes wrong.",
            // eslint-disable-next-line max-len
            'Please check if template is too complicated or not. Or simplify template might solves issue.',
        ].join('\n'));
    }
    return formatted;
}
function debugLog(content) {
    console.log('content start');
    console.log(content);
    console.log('content end');
    return content;
}


/***/ }),

/***/ "./src/vsctm.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VscodeTextmate": () => (/* binding */ VscodeTextmate),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var vscode_oniguruma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("vscode-oniguruma");
/* harmony import */ var vscode_oniguruma__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vscode_oniguruma__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("path");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/util.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





class VscodeTextmate {
    constructor(vsctm, oniguruma) {
        // @ts-ignore
        return (() => __awaiter(this, void 0, void 0, function* () {
            var _a;
            this.vsctm = (_a = vsctm.default) !== null && _a !== void 0 ? _a : vsctm;
            // @ts-ignore
            this.oniguruma = oniguruma || (vscode_oniguruma__WEBPACK_IMPORTED_MODULE_2___default()) || vscode_oniguruma__WEBPACK_IMPORTED_MODULE_2__;
            yield this.loadWasm();
            return this;
        }))();
    }
    loadWasm() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const wasm = yield fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(
            // @ts-ignore
            // eslint-disable-next-line
            require.resolve('vscode-oniguruma/release/onig.wasm'));
            yield ((_a = this.oniguruma) === null || _a === void 0 ? void 0 : _a.loadWASM(wasm.buffer));
            if (!this.initCalled) {
                try {
                    this.oniguruma.loadWASM(wasm.buffer);
                }
                catch (error) {
                    this.initCalled = true;
                }
                this.initCalled = true;
            }
        });
    }
    createRegistry() {
        this.registry = new this.vsctm.Registry({
            loadGrammar: (scopeName) => {
                if (scopeName === 'text.html.php.blade') {
                    // https://github.com/onecentlin/
                    // laravel-blade-snippets-vscode/
                    // blob/master/syntaxes/blade.tmLanguage.json
                    return (0,_util__WEBPACK_IMPORTED_MODULE_4__.readFile)(path__WEBPACK_IMPORTED_MODULE_3___default().resolve(__dirname, `../syntaxes/blade.tmLanguage.json`)).then((content) => this.vsctm.parseRawGrammar(content.toString(), './blade.tmLanguage.json'));
                }
                return null;
            },
            onigLib: Promise.resolve({
                createOnigScanner: (sources) => new this.oniguruma.OnigScanner(sources),
                createOnigString: (str) => new this.oniguruma.OnigString(str),
            }),
        });
        return this.registry;
    }
    tokenizeLines(splitedLines, grammar) {
        return lodash__WEBPACK_IMPORTED_MODULE_1___default().map(splitedLines, (line) => { var _a; return grammar.tokenizeLine(line, (_a = this.vsctm) === null || _a === void 0 ? void 0 : _a.INITIAL); });
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    VscodeTextmate,
});


/***/ }),

/***/ "@prettier/plugin-php/standalone":
/***/ ((module) => {

module.exports = require("@prettier/plugin-php/standalone");

/***/ }),

/***/ "aigle":
/***/ ((module) => {

module.exports = require("aigle");

/***/ }),

/***/ "chalk":
/***/ ((module) => {

module.exports = require("chalk");

/***/ }),

/***/ "detect-indent":
/***/ ((module) => {

module.exports = require("detect-indent");

/***/ }),

/***/ "glob":
/***/ ((module) => {

module.exports = require("glob");

/***/ }),

/***/ "ignore":
/***/ ((module) => {

module.exports = require("ignore");

/***/ }),

/***/ "js-beautify":
/***/ ((module) => {

module.exports = require("js-beautify");

/***/ }),

/***/ "lodash":
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ "prettier/standalone":
/***/ ((module) => {

module.exports = require("prettier/standalone");

/***/ }),

/***/ "vscode-oniguruma":
/***/ ((module) => {

module.exports = require("vscode-oniguruma");

/***/ }),

/***/ "vscode-textmate":
/***/ ((module) => {

module.exports = require("vscode-textmate");

/***/ }),

/***/ "xregexp":
/***/ ((module) => {

module.exports = require("xregexp");

/***/ }),

/***/ "fs":
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "os":
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "util":
/***/ ((module) => {

module.exports = require("util");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BladeFormatter": () => (/* binding */ BladeFormatter),
/* harmony export */   "Formatter": () => (/* reexport safe */ _formatter__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ignore");
/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ignore__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("path");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("process");
/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("chalk");
/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(chalk__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var glob__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("glob");
/* harmony import */ var glob__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(glob__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./src/formatter.ts");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./src/util.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










class BladeFormatter {
    constructor(options = {}, paths = []) {
        this.paths = paths;
        this.options = options;
        this.targetFiles = [];
        this.errors = [];
        this.diffs = [];
        this.outputs = [];
        this.formattedFiles = [];
        this.ignoreFile = '';
        this.fulFillFiles = [];
        this.targetFiles = [];
    }
    format(content, opts = {}) {
        const options = this.options || opts;
        return new _formatter__WEBPACK_IMPORTED_MODULE_8__["default"](options).formatContent(content).catch((err) => console.log(err));
    }
    formatFromCLI() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.readIgnoreFile();
            this.printPreamble();
            yield this.processPaths();
            this.printResults();
        });
    }
    readIgnoreFile() {
        return __awaiter(this, void 0, void 0, function* () {
            const ignoreFile = '.bladeignore';
            try {
                if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(ignoreFile)) {
                    this.ignoreFile = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(ignoreFile).toString();
                }
            }
            catch (err) {
                // do nothing
            }
        });
    }
    processPaths() {
        return __awaiter(this, void 0, void 0, function* () {
            yield Promise.all(lodash__WEBPACK_IMPORTED_MODULE_7___default().map(this.paths, (path) => __awaiter(this, void 0, void 0, function* () { return this.processPath(path); })));
        });
    }
    processPath(path) {
        return __awaiter(this, void 0, void 0, function* () {
            yield BladeFormatter.globFiles(path)
                .then((paths) => lodash__WEBPACK_IMPORTED_MODULE_7___default().map(paths, (target) => path__WEBPACK_IMPORTED_MODULE_1___default().relative('.', target)))
                .then((paths) => this.filterFiles(paths))
                .then(this.fulFillFiles)
                .then((paths) => this.formatFiles(paths));
        });
    }
    static globFiles(path) {
        return new Promise((resolve, reject) => {
            glob__WEBPACK_IMPORTED_MODULE_5___default()(path, (error, matches) => (error ? reject(error) : resolve(matches)));
        });
    }
    filterFiles(paths) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.ignoreFile === '') {
                return paths;
            }
            const REGEX_FILES_NOT_IN_CURRENT_DIR = /^\.\.*/;
            const filesOutsideTargetDir = lodash__WEBPACK_IMPORTED_MODULE_7___default().filter(paths, (path) => REGEX_FILES_NOT_IN_CURRENT_DIR.test(path__WEBPACK_IMPORTED_MODULE_1___default().relative('.', path)));
            const filesUnderTargetDir = lodash__WEBPACK_IMPORTED_MODULE_7___default().xor(paths, filesOutsideTargetDir);
            const filteredFiles = ignore__WEBPACK_IMPORTED_MODULE_0___default()().add(this.ignoreFile).filter(filesUnderTargetDir);
            return lodash__WEBPACK_IMPORTED_MODULE_7___default().concat(filesOutsideTargetDir, filteredFiles);
        });
    }
    static fulFillFiles(paths) {
        this.targetFiles.push(paths);
        return Promise.resolve(paths);
    }
    formatFiles(paths) {
        return __awaiter(this, void 0, void 0, function* () {
            yield Promise.all(lodash__WEBPACK_IMPORTED_MODULE_7___default().map(paths, (path) => __awaiter(this, void 0, void 0, function* () { return this.formatFile(path); })));
        });
    }
    formatFile(path) {
        return __awaiter(this, void 0, void 0, function* () {
            yield _util__WEBPACK_IMPORTED_MODULE_9__.readFile(path)
                .then((data) => Promise.resolve(data.toString('utf-8')))
                .then((content) => new _formatter__WEBPACK_IMPORTED_MODULE_8__["default"](this.options).formatContent(content))
                .then((formatted) => this.checkFormatted(path, formatted))
                .then((formatted) => this.writeToFile(path, formatted))
                .catch((err) => {
                this.handleError(path, err);
            });
        });
    }
    checkFormatted(path, formatted) {
        return __awaiter(this, void 0, void 0, function* () {
            this.printFormattedOutput(path, formatted);
            const originalContent = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(path, 'utf-8');
            const originalLines = _util__WEBPACK_IMPORTED_MODULE_9__.splitByLines(originalContent);
            const formattedLines = _util__WEBPACK_IMPORTED_MODULE_9__.splitByLines(formatted);
            const diff = _util__WEBPACK_IMPORTED_MODULE_9__.generateDiff(path, originalLines, formattedLines);
            this.diffs.push(diff);
            this.outputs.push(formatted);
            if (diff.length > 0) {
                if (this.options.progress || this.options.write) {
                    process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().green('F'));
                }
                if (this.options.checkFormatted) {
                    process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(`${path}\n`);
                    (process__WEBPACK_IMPORTED_MODULE_3___default().exitCode) = 1;
                }
                this.formattedFiles.push(path);
            }
            if (diff.length === 0) {
                if (this.options.progress || this.options.write) {
                    process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().green('.'));
                }
            }
            return Promise.resolve(formatted);
        });
    }
    printFormattedOutput(path, formatted) {
        if (this.options.write || this.options.checkFormatted) {
            return;
        }
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(`${formatted}`);
        const isLastFile = lodash__WEBPACK_IMPORTED_MODULE_7___default().last(this.paths) === path || lodash__WEBPACK_IMPORTED_MODULE_7___default().last(this.targetFiles) === path;
        if (isLastFile) {
            return;
        }
        // write divider to stdout
        if (this.paths.length > 1 || this.targetFiles.length > 1) {
            process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write('\n');
        }
    }
    writeToFile(path, content) {
        if (!this.options.write) {
            return;
        }
        if (this.options.checkFormatted) {
            return;
        }
        // preserve original content
        if (content.length === 0 || lodash__WEBPACK_IMPORTED_MODULE_7___default().isNull(content) || lodash__WEBPACK_IMPORTED_MODULE_7___default().isEmpty(content)) {
            return;
        }
        fs__WEBPACK_IMPORTED_MODULE_2___default().writeFile(path, content, (err) => {
            if (err) {
                process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(`${chalk__WEBPACK_IMPORTED_MODULE_4___default().red(err.message)}\n`);
                process__WEBPACK_IMPORTED_MODULE_3___default().exit(1);
            }
        });
    }
    handleError(path, error) {
        if (this.options.progress || this.options.write) {
            process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().red('E'));
        }
        (process__WEBPACK_IMPORTED_MODULE_3___default().exitCode) = 1;
        this.errors.push({ path, message: error.message, error });
    }
    printPreamble() {
        if (this.options.checkFormatted) {
            process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write('Check formatting... \n');
        }
    }
    printResults() {
        return __awaiter(this, void 0, void 0, function* () {
            this.printDescription();
            this.printDifferences();
            this.printFormattedFiles();
            this.printErrors();
        });
    }
    printDescription() {
        if (!this.options.write) {
            return;
        }
        const returnLine = '\n\n';
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(returnLine);
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold.green('Fixed: F\n'));
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold.red('Errors: E\n'));
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold('Not Changed: ') + chalk__WEBPACK_IMPORTED_MODULE_4___default().bold.green('.\n'));
    }
    printFormattedFiles() {
        if (this.formattedFiles.length === 0) {
            if (this.options.checkFormatted) {
                process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold('\nAll matched files are formatted! \n'));
            }
            return;
        }
        if (!this.options.write) {
            if (this.options.checkFormatted) {
                process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write('\nAbove file(s) are formattable. Forgot to run formatter? ' +
                    `Use ${chalk__WEBPACK_IMPORTED_MODULE_4___default().bold('--write')} option to overwrite.\n`);
            }
            return;
        }
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold('\nFormatted Files: \n'));
        lodash__WEBPACK_IMPORTED_MODULE_7___default().each(this.formattedFiles, (path) => process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(`${chalk__WEBPACK_IMPORTED_MODULE_4___default().bold(path)}\n`));
    }
    printDifferences() {
        if (!this.options.diff) {
            return;
        }
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().bold('\nDifferences: \n\n'));
        if (lodash__WEBPACK_IMPORTED_MODULE_7___default().filter(this.diffs, (diff) => diff.length > 0).length === 0) {
            process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default()('No changes found. \n\n'));
            return;
        }
        lodash__WEBPACK_IMPORTED_MODULE_7___default().each(this.diffs, (diff) => _util__WEBPACK_IMPORTED_MODULE_9__.printDiffs(diff));
    }
    printErrors() {
        if (lodash__WEBPACK_IMPORTED_MODULE_7___default().isEmpty(this.errors)) {
            return;
        }
        process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(chalk__WEBPACK_IMPORTED_MODULE_4___default().red.bold('\nErrors: \n\n'));
        lodash__WEBPACK_IMPORTED_MODULE_7___default().each(this.errors, (error) => process__WEBPACK_IMPORTED_MODULE_3___default().stdout.write(`${util__WEBPACK_IMPORTED_MODULE_6___default().format(error)}\n`));
    }
}


})();

var __webpack_export_target__ = exports;
for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ })()
;
//# sourceMappingURL=bundle.js.map